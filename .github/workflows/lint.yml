name: Lint & Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    env:
      PIPENV_HIDE_EMOJIS: 1
      PIPENV_NOSPIN: 1

      PYTHON_VERSION: "3.11"
      POETRY_VERSION: "1.7.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: false
          virtualenvs-in-project: false

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
          cache-dependency-path: poetry.lock

      - name: Set Poetry environment
        run: |
          poetry env use ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: poetry install --no-root

      - name: Run pre-commit hooks
        run: export PIP_USER=0; SKIP=ruff SKIP=pytest pre-commit run --all-files

      - name: Run pytest
        uses: pavelzw/pytest-action@v2
        with:
          emoji: false

      - name: Run ruff
        run: "poetry run ruff check --output-format=github ."
